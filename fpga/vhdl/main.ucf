# This project uses the USB-FPGA-Module 1.11c, made by ZTEX (ztex.de):
# * http://www.ztex.de/usb-fpga-1/usb-fpga-1.11.e.html
# * http://www.ztex.de/usb-fpga-1/pwr-1.0.e.html
# Slave Fifo Interface
NET "IFCLK" LOC = J14;
NET "IFCLK" IOSTANDARD = LVCMOS33;
NET "SLOE" LOC = T3;
NET "SLOE" IOSTANDARD = LVCMOS33;
NET "SLRD" LOC = K11;
NET "SLRD" IOSTANDARD = LVCMOS33;
NET "SLWR" LOC = J11;
NET "SLWR" IOSTANDARD = LVCMOS33;
NET "FIFOADR0" LOC = T5;
NET "FIFOADR0" IOSTANDARD = LVCMOS33;
NET "FIFOADR1" LOC = N11;
NET "FIFOADR1" IOSTANDARD = LVCMOS33;
NET "PKTEND" LOC = T11;
NET "PKTEND" IOSTANDARD = LVCMOS33;
NET "EMPTYFLAGC" LOC = G14;
NET "EMPTYFLAGC" IOSTANDARD = LVCMOS33;
NET "FULLFLAGB" LOC = G16;
NET "FULLFLAGB" IOSTANDARD = LVCMOS33;
NET "FLAGA" LOC = F12;
NET "FLAGA" IOSTANDARD = LVCMOS33;

NET "FD[0]" LOC = C16;
NET "FD[0]" IOSTANDARD = LVCMOS33;
NET "FD[1]" LOC = C15;
NET "FD[1]" IOSTANDARD = LVCMOS33;
NET "FD[2]" LOC = D16;
NET "FD[2]" IOSTANDARD = LVCMOS33;
NET "FD[3]" LOC = D14;
NET "FD[3]" IOSTANDARD = LVCMOS33;
NET "FD[4]" LOC = E13;
NET "FD[4]" IOSTANDARD = LVCMOS33;
NET "FD[5]" LOC = E12;
NET "FD[5]" IOSTANDARD = LVCMOS33;
NET "FD[6]" LOC = F16;
NET "FD[6]" IOSTANDARD = LVCMOS33;
NET "FD[7]" LOC = F15;
NET "FD[7]" IOSTANDARD = LVCMOS33;

NET "FD[8]" IOSTANDARD = LVCMOS33;
NET "FD[8]" LOC = P10;
NET "FD[9]" IOSTANDARD = LVCMOS33;
NET "FD[9]" LOC = N12;
NET "FD[10]" IOSTANDARD = LVCMOS33;
NET "FD[10]" LOC = P12;
NET "FD[11]" IOSTANDARD = LVCMOS33;
NET "FD[11]" LOC = N5;
NET "FD[12]" IOSTANDARD = LVCMOS33;
NET "FD[12]" LOC = P5;
NET "FD[13]" IOSTANDARD = LVCMOS33;
NET "FD[13]" LOC = L8;
NET "FD[14]" IOSTANDARD = LVCMOS33;
NET "FD[14]" LOC = L7;
NET "FD[15]" IOSTANDARD = LVCMOS33;
NET "FD[15]" LOC = R5;




NET "reset_in" LOC = R3;
#Created by Constraints Editor (xc6slx25-ftg256-3) - 2011/01/06
NET "clk_in" TNM_NET = "clk_in";
TIMESPEC TS_clk_in = PERIOD "clk_in" 48 MHz HIGH 50 %;

NET "clk_in" LOC = K14;

NET "led[0]" LOC = A4;
NET "led[1]" LOC = C4;
NET "led[2]" LOC = B5;
NET "led[3]" LOC = D5;

NET "led[0]" IOSTANDARD = LVCMOS33;
NET "led[1]" IOSTANDARD = LVCMOS33;
NET "led[2]" IOSTANDARD = LVCMOS33;
NET "led[3]" IOSTANDARD = LVCMOS33;

NET "sc_clk" LOC = E11;
NET "sc_io" LOC = B16;
NET "sc_pin4" LOC = D11;
NET "sc_pin6" LOC = A14;
NET "sc_pin8" LOC = B15;
NET "sc_rst" LOC = F10;
NET "sc_sw1" LOC = B14;

NET "sc_clk" IOSTANDARD = LVCMOS33;
NET "sc_io" IOSTANDARD = LVCMOS33;
NET "sc_pin4" IOSTANDARD = LVCMOS33;
NET "sc_pin6" IOSTANDARD = LVCMOS33;
NET "sc_pin8" IOSTANDARD = LVCMOS33;
NET "sc_rst" IOSTANDARD = LVCMOS33;
NET "sc_sw1" IOSTANDARD = LVCMOS33;

NET "sc_io" PULLUP;

NET "gpio[0]" LOC = K16;
NET "gpio[1]" LOC = L16;
NET "gpio[2]" LOC = M16;
NET "gpio[3]" LOC = P16;
NET "gpio[4]" LOC = P15;
NET "gpio[5]" LOC = T15;
NET "gpio[6]" LOC = K15;
NET "gpio[7]" LOC = R14;

NET "gpio[0]" IOSTANDARD = LVCMOS33;
NET "gpio[1]" IOSTANDARD = LVCMOS33;
NET "gpio[2]" IOSTANDARD = LVCMOS33;
NET "gpio[3]" IOSTANDARD = LVCMOS33;
NET "gpio[4]" IOSTANDARD = LVCMOS33;
NET "gpio[5]" IOSTANDARD = LVCMOS33;
NET "gpio[6]" IOSTANDARD = LVCMOS33;
NET "gpio[7]" IOSTANDARD = LVCMOS33;




NET "dac_clk" LOC = C10;
NET "dac_v_out[0]" LOC = A5;
NET "dac_v_out[1]" LOC = A6;
NET "dac_v_out[2]" LOC = D6;
NET "dac_v_out[3]" LOC = C6;
NET "dac_v_out[4]" LOC = E6;
NET "dac_v_out[5]" LOC = F7;
NET "dac_v_out[6]" LOC = A7;
NET "dac_v_out[7]" LOC = C7;

NET "dac_v_out[0]" IOSTANDARD = LVCMOS33;
NET "dac_v_out[1]" IOSTANDARD = LVCMOS33;
NET "dac_v_out[2]" IOSTANDARD = LVCMOS33;
NET "dac_v_out[3]" IOSTANDARD = LVCMOS33;
NET "dac_v_out[4]" IOSTANDARD = LVCMOS33;
NET "dac_v_out[5]" IOSTANDARD = LVCMOS33;
NET "dac_v_out[6]" IOSTANDARD = LVCMOS33;
NET "dac_v_out[7]" IOSTANDARD = LVCMOS33;
NET "dac_v_out[0]" SLEW = FAST;
NET "dac_v_out[1]" SLEW = FAST;
NET "dac_v_out[2]" SLEW = FAST;
NET "dac_v_out[3]" SLEW = FAST;
NET "dac_v_out[4]" SLEW = FAST;
NET "dac_v_out[5]" SLEW = FAST;
NET "dac_v_out[6]" SLEW = FAST;
NET "dac_v_out[7]" SLEW = FAST;

NET "dac_clk" IOSTANDARD = LVCMOS33;

#NET "pc[0]" LOC = G12; _AV
#NET "pc[1]" LOC = G11; _WE
#NET "pc[2]" LOC = H15; _RE
#NET "pc[3]" LOC = M14; _IN_WE
#NET "pc[4]" LOC = P11; _IN_PIN
#NET "pc[5]" LOC = H14; _OUT_RE
#NET "pc[6]" LOC = H11; _OUT_PIN
#NET "pc[7]" LOC = H13;

NET "w_en" LOC = G12; 
NET "in_pin" LOC = G11; 
NET "r_en" LOC = H15; 
NET "out_pin" LOC = M14; 


#NET "a_v" LOC = P10;
#NET "in_pin" LOC = P5;
#NET "out_pin" LOC = L7;
#NET "r_en" LOC = P12;
#NET "re_out" LOC = L8;
#NET "w_en" LOC = N12;
#NET "we_in" LOC = N5;
NET "clk_in" IOSTANDARD = LVCMOS33;
NET "in_pin" IOSTANDARD = LVCMOS33;
NET "out_pin" IOSTANDARD = LVCMOS33;
NET "r_en" IOSTANDARD = LVCMOS33;
#NET "re_out" IOSTANDARD = LVCMOS33;
NET "reset_in" IOSTANDARD = LVCMOS33;
NET "w_en" IOSTANDARD = LVCMOS33;
#NET "we_in" IOSTANDARD = LVCMOS33;

NET "adc_encode" LOC = P4;
NET "adc_v_in[0]" LOC = M13;
NET "adc_v_in[1]" LOC = M12;
NET "adc_v_in[2]" LOC = T12;
NET "adc_v_in[3]" LOC = R9;
NET "adc_v_in[4]" LOC = N9;
NET "adc_v_in[5]" LOC = N8;
NET "adc_v_in[6]" LOC = P7;
NET "adc_v_in[7]" LOC = P6;

NET "adc_encode" IOSTANDARD = LVCMOS33;
NET "adc_v_in[0]" IOSTANDARD = LVCMOS33;
NET "adc_v_in[1]" IOSTANDARD = LVCMOS33;
NET "adc_v_in[2]" IOSTANDARD = LVCMOS33;
NET "adc_v_in[3]" IOSTANDARD = LVCMOS33;
NET "adc_v_in[4]" IOSTANDARD = LVCMOS33;
NET "adc_v_in[5]" IOSTANDARD = LVCMOS33;
NET "adc_v_in[6]" IOSTANDARD = LVCMOS33;
NET "adc_v_in[7]" IOSTANDARD = LVCMOS33;

NET "adc_encode" DRIVE = 12;
NET "adc_encode" SLEW = FAST;

NET "clk_in" DRIVE = 24;
NET "adc_v_in[0]" SLEW = FAST;
NET "adc_v_in[1]" SLEW = FAST;
NET "adc_v_in[2]" SLEW = FAST;
NET "adc_v_in[3]" SLEW = FAST;
NET "adc_v_in[4]" SLEW = FAST;
NET "adc_v_in[5]" SLEW = FAST;
NET "adc_v_in[6]" SLEW = FAST;
NET "adc_v_in[7]" SLEW = FAST;
NET "clk_in" SLEW = FAST;

############################################################################
## 
##  Xilinx, Inc. 2006            www.xilinx.com 
##  Sa 18. Jun 16:32:32 2011
##  Generated by MIG Version 3.7
##  
############################################################################
##  File name :       bigmem.ucf
## 
##  Details :     Constraints file
##                    FPGA family:       spartan6
##                    FPGA:              xc6slx25-ftg256
##                    Speedgrade:        -3
##                    Design Entry:      VERILOG
##                    Design:            without Test bench
##                    DCM Used:          Enable
##                    No.Of Memory Controllers: 1
##
############################################################################ 
############################################################################
# VCC AUX VOLTAGE 
############################################################################
CONFIG VCCAUX  = 2.5;
# Valid values are 2.5 and 3.3
############################################################################
# Extended MCB performance mode requires a different Vccint specification to
# achieve higher maximum frequencies for DDR2 and DDR3.Consult the Spartan-6
#datasheet (DS162) table 2 and 24 for more information 
############################################################################
CONFIG MCB_PERFORMANCE  = STANDARD;


##################################################################################
# Timing Ignore constraints for paths crossing the clock domain 
##################################################################################
#NET "memc?_wrapper_inst/mcb_ui_top_inst/mcb_raw_wrapper_inst/selfrefresh_mcb_mode" TIG;
#NET "c?_pll_lock" TIG;
############################################################################
## Memory Controller 3                               
## Memory Device: DDR_SDRAM->MT46V32M16XX-5B-IT 
## Frequency: 200 MHz
## Time Period: 5000 ps
## Supported Part Numbers: MT46V32M16BN-5B-IT
############################################################################
############################################################################	
# All the IO resources in an IO tile which contains DQSP/UDQSP are used		
# irrespective of a single-ended or differential DQS design. Any signal that	
# is connected to the free pin of the same IO tile in a single-ended design	
# will be unrouted. Hence, the IOB cannot used as general pupose IO.			
############################################################################	
CONFIG PROHIBIT = N1,H1;

############################################################################
## Clock constraints                                                        
############################################################################
#NET "memc3_infrastructure_inst/sys_clk_ibufg" TNM_NET = "SYS_CLK3";
#TIMESPEC "TS_SYS_CLK3" = PERIOD "SYS_CLK3"  5  ns HIGH 50 %;
############################################################################
############################################################################
## I/O TERMINATION                                                          
############################################################################
NET "mcb3_dram_dq[0]" IN_TERM = NONE;
NET "mcb3_dram_dq[10]" IN_TERM = NONE;
NET "mcb3_dram_dq[11]" IN_TERM = NONE;
NET "mcb3_dram_dq[12]" IN_TERM = NONE;
NET "mcb3_dram_dq[13]" IN_TERM = NONE;
NET "mcb3_dram_dq[14]" IN_TERM = NONE;
NET "mcb3_dram_dq[15]" IN_TERM = NONE;
NET "mcb3_dram_dq[1]" IN_TERM = NONE;
NET "mcb3_dram_dq[2]" IN_TERM = NONE;
NET "mcb3_dram_dq[3]" IN_TERM = NONE;
NET "mcb3_dram_dq[4]" IN_TERM = NONE;
NET "mcb3_dram_dq[5]" IN_TERM = NONE;
NET "mcb3_dram_dq[6]" IN_TERM = NONE;
NET "mcb3_dram_dq[7]" IN_TERM = NONE;
NET "mcb3_dram_dq[8]" IN_TERM = NONE;
NET "mcb3_dram_dq[9]" IN_TERM = NONE;
NET "mcb3_dram_dqs" IN_TERM = NONE;
NET "mcb3_dram_udqs" IN_TERM = NONE;

############################################################################
# I/O STANDARDS 
############################################################################
NET "mcb3_dram_dq[0]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_dq[10]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_dq[11]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_dq[12]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_dq[13]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_dq[14]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_dq[15]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_dq[1]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_dq[2]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_dq[3]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_dq[4]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_dq[5]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_dq[6]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_dq[7]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_dq[8]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_dq[9]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_a[0]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_a[10]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_a[11]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_a[12]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_a[1]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_a[2]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_a[3]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_a[4]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_a[5]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_a[6]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_a[7]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_a[8]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_a[9]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_ba[0]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_ba[1]" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_dqs" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_udqs" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_ck" IOSTANDARD = DIFF_SSTL2_II;
NET "mcb3_dram_ck_n" IOSTANDARD = DIFF_SSTL2_II;
NET "mcb3_dram_cke" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_ras_n" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_cas_n" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_we_n" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_dm" IOSTANDARD = SSTL2_II;
NET "mcb3_dram_udm" IOSTANDARD = SSTL2_II;
NET "mcb3_rzq" IOSTANDARD = SSTL2_II;
#NET  "c3_sys_clk"                                  IOSTANDARD = LVCMOS25 ;
#NET  "c3_sys_rst_n"                                IOSTANDARD = LVCMOS25 ;
############################################################################
# MCB 3
# Pin Location Constraints for Clock, Masks, Address, and Controls
############################################################################
NET "mcb3_dram_a[0]" LOC = K5;
NET "mcb3_dram_a[10]" LOC = G6;
NET "mcb3_dram_a[11]" LOC = E3;
NET "mcb3_dram_a[12]" LOC = F3;
NET "mcb3_dram_a[1]" LOC = K6;
NET "mcb3_dram_a[2]" LOC = D1;
NET "mcb3_dram_a[3]" LOC = L4;
NET "mcb3_dram_a[4]" LOC = G5;
NET "mcb3_dram_a[5]" LOC = H4;
NET "mcb3_dram_a[6]" LOC = H3;
NET "mcb3_dram_a[7]" LOC = D3;
NET "mcb3_dram_a[8]" LOC = B2;
NET "mcb3_dram_a[9]" LOC = A2;
NET "mcb3_dram_ba[0]" LOC = C3;
NET "mcb3_dram_ba[1]" LOC = C2;
NET "mcb3_dram_cas_n" LOC = H5;
NET "mcb3_dram_ck" LOC = E2;
NET "mcb3_dram_ck_n" LOC = E1;
NET "mcb3_dram_cke" LOC = F4;
NET "mcb3_dram_dm" LOC = J4;
NET "mcb3_dram_dq[0]" LOC = K2;
NET "mcb3_dram_dq[10]" LOC = M2;
NET "mcb3_dram_dq[11]" LOC = M1;
NET "mcb3_dram_dq[12]" LOC = P2;
NET "mcb3_dram_dq[13]" LOC = P1;
NET "mcb3_dram_dq[14]" LOC = R2;
NET "mcb3_dram_dq[15]" LOC = R1;
NET "mcb3_dram_dq[1]" LOC = K1;
NET "mcb3_dram_dq[2]" LOC = J3;
NET "mcb3_dram_dq[3]" LOC = J1;
NET "mcb3_dram_dq[4]" LOC = F2;
NET "mcb3_dram_dq[5]" LOC = F1;
NET "mcb3_dram_dq[6]" LOC = G3;
NET "mcb3_dram_dq[7]" LOC = G1;
NET "mcb3_dram_dq[8]" LOC = L3;
NET "mcb3_dram_dq[9]" LOC = L1;
NET "mcb3_dram_dqs" LOC = H2;
NET "mcb3_dram_ras_n" LOC = J6;
#NET  "c3_sys_clk"                                LOC = "M9" ;
#NET  "c3_sys_rst_n"                              LOC = "P6" ;
NET "mcb3_dram_udm" LOC = K3;
NET "mcb3_dram_udqs" LOC = N3;
NET "mcb3_dram_we_n" LOC = C1;

##################################################################################
#RZQ is required for all MCB designs.   Do not move the location #
#of this pin for ES devices.For production devices, RZQ can be moved to any #
#valid package pin within the MCB bank.For designs using Calibrated Input Termination, #
#a 2R resistor should be connected between RZQand ground, where R is the desired#
#input termination value.  Otherwise, RZQ should be left as a no-connect (NC) pin.#
##################################################################################
NET "mcb3_rzq" LOC = M4;
#Created by Constraints Editor (xc6slx25-ftg256-3) - 2011/10/25
NET "clk_main_buf" TNM_NET = "CLK";
NET "IFCLK" TNM_NET = "IFCLK";

TIMESPEC TS_IFCLK = PERIOD "IFCLK" 48 MHz HIGH 50 %;

#Created by Constraints Editor (xc6slx25-ftg256-3) - 2011/11/02
# PlanAhead Generated timing constraints 

#Created by Constraints Editor (xc6slx25-ftg256-3) - 2011/11/02

#INST "*/INPUT_CLOCK_SYNC_inst*" TPTHRU = "ASYNC_FIFO_IN";
#INST "*/OUTPUT_CLOCK_SYNC_inst*" TPTHRU = "ASYNC_FIFO_OUT";

#TIMESPEC TS_IN_AB = FROM "CLK" THRU "ASYNC_FIFO_IN" TO "IFCLK" TIG;
#TIMESPEC TS_IN_BA = FROM "IFCLK" THRU "ASYNC_FIFO_IN" TO "IFCLK" TIG;

#TIMESPEC TS_OUT_AB = FROM "CLK" THRU "ASYNC_FIFO_OUT" TO "IFCLK" TIG;
#TIMESPEC TS_OUT_BA = FROM "IFCLK" THRU "ASYNC_FIFO_OUT" TO "IFCLK" TIG;

TIMESPEC TS_AB = FROM "IFCLK" TO "CLK" TIG;
TIMESPEC TS_BA = FROM "CLK" TO "IFCLK" TIG;
TIMESPEC TS_AC = FROM "clk_in" TO "CLK" TIG;
TIMESPEC TS_CA = FROM "CLK" TO "clk_in" TIG;